#include <bits/stdc++.h> 
int max(int &a,int &b){
    if(a>=b){return a;}
    else{return b;}
}
long long crossing(int arr[],int i,int m,int n){
    int rightm=-100000;
    int leftm=-100000;
    int sum=0;
    for(int j=m;j<=n;j++){
        sum=sum+arr[j];
        rightm=max(sum,rightm);
    }
    sum=0;
    for(int j=m;j>=i;j--){
        sum+=arr[j];
        leftm=max(sum,leftm);
    }
    long long z=max(max(leftm+rightm-arr[m],leftm),rightm);
    return z;
}
int xx=0;
long long maxSubarraySum(int arr[],int n,int i=0)
{   if(xx==0){n=n-1; xx=1;}
    if(i>n){return INT_MIN;}
    else if(i==n){return arr[i];}
    else{
        int m=(i+n)/2;
        return max(max(maxSubarraySum(arr,n,m+1),maxSubarraySum(arr,m-1,i)),crossing(arr,i,m,n));
    }
}
